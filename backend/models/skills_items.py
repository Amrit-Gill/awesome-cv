# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from models.base_model_ import Model
import util


class SkillsItems(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, title: str=None, values: str=None):  # noqa: E501
        """SkillsItems - a model defined in Swagger

        :param title: The title of this SkillsItems.  # noqa: E501
        :type title: str
        :param values: The values of this SkillsItems.  # noqa: E501
        :type values: str
        """
        self.swagger_types = {
            'title': str,
            'values': str
        }

        self.attribute_map = {
            'title': 'title',
            'values': 'values'
        }

        self._title = title
        self._values = values

    @classmethod
    def from_dict(cls, dikt) -> 'SkillsItems':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The skillsItems of this SkillsItems.  # noqa: E501
        :rtype: SkillsItems
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this SkillsItems.


        :return: The title of this SkillsItems.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this SkillsItems.


        :param title: The title of this SkillsItems.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")  # noqa: E501

        self._title = title

    @property
    def values(self) -> str:
        """Gets the values of this SkillsItems.


        :return: The values of this SkillsItems.
        :rtype: str
        """
        return self._values

    @values.setter
    def values(self, values: str):
        """Sets the values of this SkillsItems.


        :param values: The values of this SkillsItems.
        :type values: str
        """
        if values is None:
            raise ValueError("Invalid value for `values`, must not be `None`")  # noqa: E501

        self._values = values
